import glob
import os
import urllib.request

import numpy as np
import pandas as pd
import streamlit as st
from PIL import Image


def update_params():
    st.experimental_set_query_params(challenge=st.session_state.day)


md_files = sorted(
    [int(x.strip("Day").strip(".md")) for x in glob.glob1("content", "*.md")]
)

# Logo and Navigation
col1, col2, col3 = st.columns((1, 4, 1))
with col2:
    st.image(Image.open("streamlit-logo-secondary-colormark-darktext.png"))
st.markdown("# рзйрзж ржжрж┐ржирзЗ рж╕рзНржЯрзНрж░рж┐ржорж▓рж┐ржЯрзН ")

days_list = [f"Day {x}" for x in md_files]

query_params = st.experimental_get_query_params()

try:
    if query_params and query_params["challenge"][0] in days_list:
        st.session_state.day = query_params["challenge"][0]
except KeyError:
    st.session_state.day = days_list[0]

selected_day = st.selectbox(
    "Start the Challenge ЁЯСЗ", days_list, key="day", on_change=update_params
)

with st.expander("#30DaysOfStreamlit рж╕ржорзНржкрж░рзНржХрж┐ржд"):
    st.markdown(
        """
    **#30DaysOfStreamlit** рж╣рж▓ ржПржХржЯрж┐ ржХрзЛржбрж┐ржВ ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬ ржпрж╛ ржЖржкржирж╛ржХрзЗ Streamlit ржЕрзНржпрж╛ржк рждрзИрж░рж┐ рж╢рзБрж░рзБ ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рж╛рж░ ржЬржирзНржп ржбрж┐ржЬрж╛ржЗржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред
    
    ржмрж┐рж╢рзЗрж╖ ржХрж░рзЗ, ржЖржкржирж┐ рж╕ржХрзНрж╖ржо рж╣ржмрзЗржи:
    - рж╕рзНржЯрзНрж░рж┐ржорж▓рж┐ржЯрзН ржЕрзНржпрж╛ржкрж╕ рждрзИрж░рж┐ ржХрж░рж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ ржХрзЛржбрж┐ржВ ржкрж░рж┐ржмрзЗрж╢ рж╕рзЗржЯ ржЖржк ржХрж░рзБржи
    - ржЖржкржирж╛рж░ ржкрзНрж░ржержо рж╕рзНржЯрзНрж░рж┐ржорж▓рж┐ржЯрзН ржЕрзНржпрж╛ржк рждрзИрж░рж┐ ржХрж░рзБржи
    - ржЖржкржирж╛рж░ рж╕рзНржЯрзНрж░рж┐ржорж▓рж┐ржЯрзН ржЕрзНржпрж╛ржкрзЗрж░ ржЬржирзНржп ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржп рж╕ржорж╕рзНржд ржжрзБрж░рзНржжрж╛ржирзНржд ржЗржиржкрзБржЯ/ржЖржЙржЯржкрзБржЯ ржЙржЗржЬрзЗржЯ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирзБржи
    """
    )

# Sidebar
st.sidebar.header("About")
st.sidebar.markdown(
    "[рж╕рзНржЯрзНрж░рж┐ржорж▓рж┐ржЯрзН](https://streamlit.io) рж╣рж▓ ржПржХржЯрж┐ ржкрж╛ржЗржержи рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржпрж╛ ржкрж╛ржЗржержирзЗ ржЗржирзНржЯрж╛рж░рзЗржХрзНржЯрж┐ржн, ржбрзЗржЯрж╛-ржЪрж╛рж▓рж┐ржд ржУржпрж╝рзЗржм ржЕрзНржпрж╛ржкрзНрж▓рж┐ржХрзЗрж╢ржи рждрзИрж░рж┐ ржХрж░рждрзЗ ржжрзЗржпрж╝"
)

st.sidebar.header("Resources")
st.sidebar.markdown(
    """
- [рж╕рзНржЯрзНрж░рж┐ржорж▓рж┐ржЯрзН ржбржХрзБржорзЗржирзНржЯрзЗрж╢ржи](https://docs.streamlit.io/)
- [ржЪрж┐ржЯ рж╢рзАржЯ](https://docs.streamlit.io/library/cheatsheet)
- [ржмржЗ](https://www.amazon.com/dp/180056550X) (ржбрзЗржЯрж╛ рж╕рж╛ржпрж╝рзЗржирзНрж╕рзЗрж░ ржЬржирзНржп рж╕рзНржЯрзНрж░рж┐ржорж▓рж┐ржЯрзН ржжрж┐ржпрж╝рзЗ рж╢рзБрж░рзБ ржХрж░рж╛)
- [ржмрзНрж▓ржЧ](https://blog.streamlit.io/how-to-master-streamlit-for-data-science/) (ржбрзЗржЯрж╛ рж╕рж╛ржпрж╝рзЗржирзНрж╕рзЗрж░ ржЬржирзНржп ржХрзАржнрж╛ржмрзЗ рж╕рзНржЯрзНрж░рж┐ржорж▓рж┐ржЯрзН ржЖржпрж╝рждрзНржд ржХрж░ржмрзЗржи)
"""
)

st.sidebar.header("Deploy")
st.sidebar.markdown(
    "ржЖржкржирж┐ ржорж╛рждрзНрж░ ржХржпрж╝рзЗржХржЯрж┐ ржХрзНрж▓рж┐ржХрзЗ [рж╕рзНржЯрзНрж░рж┐ржорж▓рж┐ржЯрзН ржХржорж┐ржЙржирж┐ржЯрж┐ ржХрзНрж▓рж╛ржЙржб](https://streamlit.io/cloud) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржжрзНрж░рзБржд рж╕рзНржЯрзНрж░рж┐ржорж▓рж┐ржЯрзН ржЕрзНржпрж╛ржк рж╕рзНржерж╛ржкржи ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред"
)

# Display content
for i in days_list:
    if selected_day == i:
        st.markdown(f"# ЁЯЧУя╕П {i}")
        j = i.replace(" ", "")
        with open(f"content/{j}.md", "r") as f:
            st.markdown(f.read())
        if os.path.isfile(f"content/figures/{j}.csv") == True:
            st.markdown("---")
            st.markdown("### Figures")
            df = pd.read_csv(f"content/figures/{j}.csv", engine="python")
            for i in range(len(df)):
                st.image(f"content/images/{df.img[i]}")
                st.info(f"{df.figure[i]}: {df.caption[i]}")
